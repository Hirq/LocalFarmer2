@page "/"
@inject UserStateService UserStateService
<PageTitle>Index</PageTitle>

<MudGrid Class="m-0 w-100">
    <MudItem xs="12" Class="dashboard-paper-name-farmhouse">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">- Local Farmer -</MudPaper>
    </MudItem>

    <AuthorizeView>
        <Authorized>
            @if (UserStateService.CurrentUser?.IdFarmhouse != null)
            {
                <MudItem xs="12" sm="6" Class="dashboard-button">
                    <MudButton Variant="Variant.Outlined" Class="d-flex align-center justify-center mud-width-full py-8" Href="/myproducts">My products</MudButton>
                </MudItem>
                <MudItem xs="12" sm="6" Class="dashboard-button">
                    <MudButton Variant="Variant.Outlined" Class="d-flex align-center justify-center mud-width-full py-8" Href="/addproduct">Add product</MudButton>
                </MudItem>
                <MudItem xs="12" sm="6" Class="dashboard-button">
                    <MudButton Variant="Variant.Outlined" Class="d-flex align-center justify-center mud-width-full py-8" Href="/editfarmhouse">Edit farmhouse</MudButton>
                </MudItem>
            }
            else
            {
                <MudItem xs="12" sm="6" Class="dashboard-button">
                    <MudButton Variant="Variant.Outlined" Class="d-flex align-center justify-center mud-width-full py-8" Href="/addFarmhouse">Create own farmhouse </MudButton>
                </MudItem>
                <MudItem xs="12" sm="6" Class="dashboard-button">
                    <MudButton Variant="Variant.Outlined" Class="d-flex align-center justify-center mud-width-full py-8" Href="/farmhouses">Check farmhouses</MudButton>
                </MudItem>
            }
        </Authorized>
        <NotAuthorized>
            <MudItem xs="12" Class="dashboard-paper-name-farmhouse">
                <MudPaper Class="d-flex flex-column align-center mud-width-full py-8">
                    <MudText Typo="Typo.h5">Hello! Here you find local farmers. </MudText>
                    <MudText Typo="Typo.h5">Are u need fresh vegetables or preserve? Check you region and buy from farmhouse. </MudText>
                </MudPaper>
            </MudItem>
            <MudItem xs="12" sm="6" Class="dashboard-button">
                <MudButton Variant="Variant.Outlined" Class="d-flex align-center justify-center mud-width-full py-8" Href="/register">Create account</MudButton>
            </MudItem>
            <MudItem xs="12" sm="6" Class="dashboard-button">
                <MudButton Variant="Variant.Outlined" Class="d-flex align-center justify-center mud-width-full py-8" Href="/farmhouses">Check farmhouses</MudButton>
            </MudItem>
        </NotAuthorized>
    </AuthorizeView>


@*    <MudItem xs="12" sm="6">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">My orders</MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">Add product</MudPaper>
    </MudItem>*@
</MudGrid>

@code {
    protected async override Task OnInitializedAsync()
    {

    }

    protected async override Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        int? idFarmhouse = UserStateService.CurrentUser?.IdFarmhouse;
        var idUser = UserStateService.CurrentUser?.IdUser;
    }
}


@* SMALL TASKS *@
@* LoginDisplay -> W UserStateService ustawić też czy user zaloogowany, 

na podstawie tego ustawiać widoki -> następnie zmienić Edycja nazwy usera, Edycja farmhouse *@

@* Edycja account - Fullname -> Ustawić od razu na MainLayout tak jak przy Farmouses *@
@* API - czy PUT jako 0 id powinien dodawać nowy rekord czy moze tylko POST jest od dodawania ?  *@
@* Rozpisać to w kalendarzu/planerze co i jak i robić *@
@* Cykl zycia komponentu razor - chyba teraz jest ok*@
@* Sprawdzic usera niezalogowane - jego błedy *@
@* - Detail Farmhouse *@
@* - Map all farmhouse *@
@* reszte odnośnie ustawień uzytkownika i ludzi co są (np. ich telefony)  *@

@* I should refresh CurrentUser - after delete farmhouse i still see him old farmhouse - teraz powinno działać dobrze *@
@* SetParametersAsync -> OnInitializedAsync i sprawdzić czy lepiej bedzie wszystko się wyświetlać, a jak nei to poczytac o lub dodać pasek ładowania (co chyba nie jest ok) *@
@* https://learn.microsoft.com/pl-pl/aspnet/core/blazor/components/lifecycle?view=aspnetcore-8.0 *@


@* Add alert in bell when someone add our farmhouse to list favorite *@
@* VIEW FOR NOT LOGGIN USER AND OTHER VIEW FOR NO HAVE FARMHOUSE - frontend ok, now backend - add security when someone set path  np. https://localhost:7239/editfarmhouse Check endpoints when not logged, and not have set farmhouse*@
@* Alerts work bad*@
@* Better view for details products and farmhouse (describe with headings and others settings for text, maybe photos) *@


@* Pomysły na potem *@
@* Wystawienie oceany i komentarz farmhouse *@
@* Ustawienie jakiegoś własnego komentarza do danego farmhouse *@
@* Przygotować wykres dla Farmhouse *@
@* Zrobic widok, aby sprawdzić tylko te co nas interesuja czy mają cos nowego - jak mają coś nowego to powinna być lista rzeczy jak wejdzeimy w apke lub lista powiadomień
albo i lista wszystkich rzeczy jakie mają i lista nowych (np. z ostatnich 30 dni) *@
@* Lista zamówień dla gospodarza ??? *@
@* Inny widok - same kafelki na tableta widok *@
@* Light/Dark mode *@

@* Usunąć mudBlazor i ustawić UI przy pomocy Radzen ?? - Mud daje rade na .NET8 *@
@* https://github.com/radzenhq/radzen-blazor *@


@* hosting  *@
@* Płatny dla ponoć dobry *@
@* https://www.webio.pl/ *@

@* Do sprawdzenia *@
@* https://www.ovhcloud.com/pl/ *@
@* https://azure.microsoft.com/pl-pl/products/app-service/ *@

@* Ponoć free *@
@* https://freeasphosting.net/ *@
