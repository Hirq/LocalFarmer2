@page "/register"
@inject IAccountService AuthService
@inject NavigationManager NavigationManager

<h1>@loc["Account_Register"]</h1>

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in Errors!)
        {
            <p>@error</p>
        }
    </div>
}

<MudPaper Class="pa-4">
    <h5 class="card-title">@loc["Account_Start_Text"]</h5>
    <EditForm Model="RegisterModel" OnValidSubmit="HandleRegistration">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="email">@loc["Account_Email_Address"]</label>
            <InputText Id="email" class="form-control form-control-account" @bind-Value="RegisterModel.Email" />
            @* <ValidationMessage For="@(() => RegisterModel.Email)" /> *@
        </div>
        <div class="form-group">
            <label for="password">@loc["Account_Password"]</label>
            <InputText Id="password" type="password" class="form-control form-control-account" @bind-Value="RegisterModel.Password" />
            @* <ValidationMessage For="@(() => RegisterModel.Password)" /> *@
        </div>
        <div class="form-group">
            <label for="passwordConfirm">@loc["Account_Password_Confirm"]</label>
            <InputText Id="passwordConfirm" type="password" class="form-control form-control-account" @bind-Value="RegisterModel.ConfirmPassword" />
            @* <ValidationMessage For="@(() => RegisterModel.ConfirmPassword)" /> *@
        </div>
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">@loc["Button_Submit"]</MudButton>
    </EditForm>
</MudPaper>

@code {
    private RegisterDto RegisterModel = new RegisterDto();
    private bool ShowErrors;
    private IEnumerable<string>? Errors;

    private async Task HandleRegistration()
    {
        ShowErrors = false;

        var result = await AuthService.Register(RegisterModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
        }
    }
}