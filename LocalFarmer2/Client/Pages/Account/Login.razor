@page "/login"
@inject IAccountService AuthService
@inject NavigationManager NavigationManager
@inject UserStateService UserStateService


<h1>@loc["Account_Login"]</h1>

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@Error</p>
    </div>
}

<MudPaper Class="pa-4">
    <h5 class="card-title">@loc["Account_Start_Text"]</h5>
    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="email">@loc["Account_Email_Address"]</label>
            <InputText Id="email" Class="form-control form-control-account" @bind-Value="loginModel.Email" />
        </div>
        <div class="form-group">
            <label for="password">@loc["Account_Password"]</label>
            <InputText Id="password" type="password" Class="form-control form-control-account" @bind-Value="loginModel.Password" />
        </div>
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">@loc["Button_Submit"]</MudButton>
    </EditForm>
</MudPaper>
@code {
    private LoginDto loginModel = new LoginDto();
    private bool ShowErrors;
    private string Error = "";

    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Error!;
            ShowErrors = true;
        }
    }

}