@page "/myproducts"
@inject IProductService ProductService
@inject IAlertService AlertService
@inject NavigationManager NavigationManager
@inject UtilsService UtilsService
@inject HttpClient httpClient
@inject UserStateService UserStateService

<PageTitle>@loc["Product_My_Products"]</PageTitle>

<MudTable Items="@ListProducts" Hover="true" SortLabel="Sort By">
    <HeaderContent>
        <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Product, object>(x=>x.Id)">Id</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Product, object>(x=>x.Name)">@loc["X_Name"]</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Product, object>(x=>x.Description)">@loc["X_Description"]</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Product, object>(x=>x.CountMinOne)">@loc["Product_Minimal_Amount"]</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Product, object>(x=>x.PrizeOne)">@loc["Product_Prize_One"]</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Product, object>(x=>x.CountAll)">@loc["Product_Total_Quantity"]</MudTableSortLabel></MudTh>
        <MudTh>@loc["X_Action"]</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="@loc["X_Description"]">@context.Description</MudTd>
            <MudTd DataLabel="Count min one">@context.CountMinOne</MudTd>
            <MudTd DataLabel="Prize one">@context.PrizeOne</MudTd>
            <MudTd DataLabel="Count all">@context.CountAll</MudTd>
            <MudTd DataLabel="Edit">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="() => EditProduct(context.Id)">Edit</MudButton>
                <MudIconButton Icon="@Icons.Material.Filled.Delete" Variant="Variant.Outlined" Color="Color.Error" Size="Size.Medium" OnClick='() => UtilsService.OpenDialog(buttonDeleteTitle, buttonDeleteName, buttonDeleteContent, () => DeleteProduct(context.Id), Color.Error)' />
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager RowsPerPageString="@loc["Table_Rows_Per_Page"]" PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>

@code {
    IEnumerable<Product> ListProducts = new List<Product>();
    int idFarmhouse;
    private string buttonDeleteTitle = "Delete product";
    private string buttonDeleteName = "Delete";
    private string buttonDeleteContent = "Are you sure delete this product?";

    protected override async Task OnInitializedAsync()
    {
        idFarmhouse = (int)UserStateService.CurrentUser?.IdFarmhouse;
        ListProducts = await ProductService.GetProductsFarmhouse(idFarmhouse);
    }

    void EditProduct(int id)
    {
        NavigationManager.NavigateTo($"editproduct/{id}");
    }

    //TODO: Poprawić wyświetlanei alertów + X zamyka poprawnie, ale po odczekaniu 2,5sec i usunieciu kolejnego nie pojawia sie alert

    async void DeleteProduct(int id)
    {
        var product = await ProductService.GetProduct(id);
        await ProductService.DeleteProduct(id);
        AlertService.SetDeleteAlert($"Delete product {product.Name}");
        ListProducts = await ProductService.GetProductsFarmhouse(idFarmhouse);
        StateHasChanged();
        NavigationManager.NavigateTo("/myproducts");
    }
}
