@page "/notes"
@inject UtilsService UtilsService

<h3>Notes</h3>
<MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="@(() => UtilsService.OpenDialogNoteCards("Add note", note, () => AddNote()))"> Add note </MudButton>
<MudButton Color="Color.Warning" Variant="Variant.Filled" OnClick="@(() => FilterArchive())"> Only favorite </MudButton>

<MudGrid>
    @if(listNotes?.Count > 0)
    {
        @foreach(var item in listNotes)
        {
            <MudItem xs="4">
                <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                    <MudText Typo="Typo.h4">@item.Name</MudText>
                    <MudText Typo="Typo.body1">@item.Text</MudText>
                </MudPaper>
            </MudItem>
        }
    }
    <MudItem xs="4">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">

        </MudPaper>
    </MudItem>
    <MudItem xs="4">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">

        </MudPaper>
    </MudItem>
</MudGrid>
@code {
    public Note note { get; set; } 
    public List<Note> listNotes { get; set; } 
    public List<Note> originalNotesList { get; set; }
    private bool isArchiveFilterActive = false;

    private void AddNote()
    {
        Console.WriteLine("Add note");
    }

    private void FilterArchive()
    {
        isArchiveFilterActive = !isArchiveFilterActive;

        // if (isArchiveFilterActive)
        // {
        //     ListFarmhousesVM = originalFarmhousesList.Where(x => x.IsFavorite).ToList();
        // }
        // else
        // {
        //     ListFarmhousesVM = originalFarmhousesList;
        // }
    }
}
