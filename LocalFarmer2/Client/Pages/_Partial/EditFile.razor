@namespace LocalFarmer2.Client.Pages
@inject FileService FileService
@inject NavigationManager NavigationManager

<MudText Typo="Typo.h6">@Name</MudText>
<MudFileUpload T="IBrowserFile" OnFilesChanged="(e) => FileService.OnInputFileChanged(e, Model)" Context="fileInput">
    <ButtonTemplate>
        @if (FileService.fileNames != null)
        {
            @foreach (var file in FileService.fileNames)
            {
                <MudListItem Icon="@Icons.Material.Filled.AttachFile" @key="@file" OnClick="() => NavigationManager.NavigateTo(Link)">
                    <MudChip Color="Color.Dark" Text="@file" />
                </MudListItem>
            }
        }
        <MudToolBar DisableGutters="true">
            <MudButton HtmlTag="label"
                       Color="Color.Primary"
                       for="@fileInput"
                       Variant="Variant.Filled">
                Open file picker
            </MudButton>
            <MudButton OnClick="(e) => FileService.Clear(Model)"
                       Color="Color.Error"
                       Disabled="@(!FileService.fileNames.Any())"
                       Variant="Variant.Filled">
                Clear
            </MudButton>
        </MudToolBar>
    </ButtonTemplate>
</MudFileUpload>

@code {
    [Parameter]
    public IDtoWithImage Model { get; set; }    
    
    [Parameter]
    public string Name { get; set; }       

    [Parameter]
    public string Link { get; set; }   
}



@* <MudText Typo="Typo.h6">Photo product</MudText>
    <MudFileUpload T="IBrowserFile" OnFilesChanged="(e) => FileService.OnInputFileChanged(e, model)" Context="fileInput">
        <ButtonTemplate>
            @if (@FileService.fileNames != null)
        {
            @foreach (var file in FileService.fileNames)
            {
                <MudListItem Icon="@Icons.Material.Filled.AttachFile" @key="@file">
                    <MudChip Color="Color.Dark" Text="@file" />
                </MudListItem>
            }
        }
        <MudToolBar DisableGutters="true">
            <MudButton HtmlTag="label"
                        Color="Color.Primary"
                        for="@fileInput"
                        Variant="Variant.Filled">
                Open file picker
            </MudButton>
            <MudButton OnClick="(e) => FileService.Clear(model)"
                        Color="Color.Error"
                        Disabled="@(!FileService.fileNames.Any())"
                        Variant="Variant.Filled">
                Clear
            </MudButton>
        </MudToolBar>
    </ButtonTemplate>
</MudFileUpload> *@


@* <MudText Typo="Typo.h6">Photo farmhouse</MudText>
<MudFileUpload T="IBrowserFile" OnFilesChanged="(e) => FileService.OnInputFileChanged(e, farmhouseDto)" Context="fileInput">
    <ButtonTemplate>
        @if (@FileService.fileNames != null)
        {
            @foreach (var file in FileService.fileNames)
            {
                <MudListItem Icon="@Icons.Material.Filled.AttachFile" @key="@file">
                    <MudChip Color="Color.Dark" Text="@file" />
                </MudListItem>
            }
        }
        <MudToolBar DisableGutters="true" >
            <MudButton HtmlTag="label"
                        Color="Color.Primary"
                            for="@fileInput"
                        Variant="Variant.Filled">
                Open file picker
            </MudButton>
            <MudButton OnClick="(e) => FileService.Clear(farmhouseDto)"
                        Color="Color.Error"
                        Disabled="@(!FileService.fileNames.Any())"
                        Variant="Variant.Filled">
                Clear
            </MudButton>
        </MudToolBar>
    </ButtonTemplate>
</MudFileUpload> *@